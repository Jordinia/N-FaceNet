import cv2
import numpy as np
import os

recognizer = cv2.face.LBPHFaceRecognizer_create()
recognizer.read('Facerecog/Trainer/trainer.yml')
faceCascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")

font = cv2.FONT_HERSHEY_SIMPLEX

# initiate id counter
id = 0
confidence = 0

# names related to ids: example ==> Marcelo: id=1, etc
names = ['None', 'Jor', 'Ky', 'Yan', 'Fi', 'W']

# Read the input image
img = cv2.imread('C:\\Users\\Rizki Awanta Jordhie\\Pictures\\JOR02802.JPG')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

faces = faceCascade.detectMultiScale(
    gray,
    scaleFactor=1.2,
    minNeighbors=5,
    minSize=(30, 30),
)

for (x, y, w, h) in faces:
    cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)
    id, confidence = recognizer.predict(gray[y:y + h, x:x + w])

    # Check if confidence is less than 80 ==> "0" is a perfect match
    if confidence < 80:
        id = names[id]
        confidence = "  {0}%".format(round(100 - confidence))
        print("Detected Face ID:", id)
    else:
        id = "unknown"
        confidence = "  {0}%".format(round(100 - confidence))

    cv2.putText(img, str(id), (x + 5, y - 5), font, 1, (255, 255, 255), 2)
    cv2.putText(img, str(confidence), (x + 5, y + h - 5), font, 1, (255, 255, 0), 1)

cv2.namedWindow('Detected Faces', cv2.WINDOW_NORMAL)
cv2.setWindowProperty('Detected Faces', cv2.WND_PROP_FULLSCREEN, cv2.WINDOW_FULLSCREEN)
cv2.imshow('Detected Faces', img)
cv2.waitKey(0)
cv2.destroyAllWindows()
